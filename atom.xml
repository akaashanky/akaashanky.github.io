<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hi, I'm Akaash.]]></title>
  <link href="http://akaashanky.github.io/atom.xml" rel="self"/>
  <link href="http://akaashanky.github.io/"/>
  <updated>2014-05-07T21:43:45+05:30</updated>
  <id>http://akaashanky.github.io/</id>
  <author>
    <name><![CDATA[Akaash Patnaik]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
    <title type="html"><![CDATA[Words! What're they good for?]]></title>
    <link href="http://akaashanky.github.io/blog/2014/05/03/words-whatre-they-good-for/"/>
    
    <updated>2014-05-03T14:37:20+05:30</updated>
    <id>http://akaashanky.github.io/blog/2014/05/03/words-whatre-they-good-for</id>
    
    <content type="html"><![CDATA[<p>Edgar Rice Burroughs once famously called all humans &ldquo;creatures of habit&rdquo;. And while I cannot, in all honesty, extricate myself from that generalisation, I&rsquo;m definitely not one who unqualifiedly subscribes to the power of ritual.</p>

<p>Friday evening hijinks being the exception, of course.</p>

<p>Because if there was ever a ritual that stood for all that was good and noble; one which separated us from the savages &ndash; it would have to be the exercise of seeking merriment after a long, arduous work-week. In my personal experience, numerous factors have contributed to the long-standing charm of Friday evenings &ndash; alcohol, company, but most importantly&hellip; conversation.</p>

<p>Yep! That ancient, endangered artform that we&rsquo;ve happily traded in for uninterrupted access to Whatsapp messages, work e-mails, and Facebook updates. I mean, I like &ldquo;social&rdquo; networking as much as the next guy, but nothing will ever compare to the satisfaction I derive from some good ol&#8217; solid, non-electronic conversation.</p>

<p>An excellent illustration of this being last evening, when a friend and I were discussing the kind of lyrical content we tend to appreciate in our music. It started with him expressing his admiration for Nas&#8217; N.Y. State of Mind and some of the lines in them. In particular, these:</p>

<blockquote><p>It drops deep as it does in my breath</p>

<p>I never sleep, cause sleep is the cousin of death</p>

<p>Beyond the walls of intelligence, life is defined</p>

<p>I think of crime when I&rsquo;m in a New York state of mind</p></blockquote>

<p>Rap Genius has <a href="http://rapgenius.com/Nas-ny-state-of-mind-lyrics">annotated explanations</a> (some by Nas himself) for the entire song, so I&rsquo;m not gonna go into that. But what was particularly interesting about this was that while I found the song and those lyrics undeniably powerful, I didn&rsquo;t quite share the same level of appreciation as my friend for that brand of song-writing. Let the record show that I think Nas is as good a rapper as any, and this is in no way a criticism of him. The guy is a bona fide genius. My point is about the larger theme of abstruse lyricism. Turns out what I appreciate slightly less about Nas (and other lyricists such as him) is exactly what everyone loves him for &ndash; his intentionally open-ended rhymes.</p>

<p>(Interesting aside: this is exactly what Jay-Z used as ammunition against Nas in his diss track, <a href="http://rapgenius.com/183569/Jay-z-blueprint-2/And-yall-buy-the-shit-caught-up-in-the-hype-cause-the-nigga-wear-a-kufi-it-dont-mean-that-he-bright-cause-you-dont-understand-him-it-dont-mean-that-he-nice-it-just-means-you-dont-understand-all-the-bullshit-that-he-write">Blueprint 2</a>)</p>

<p>My appreciation is a lot stronger for lyrics that paint a very vivid picture and leave it to you to extrapolate the interpretation of it to your own life experiences. The counter-example I offered was from a song I was listening to earlier that day.</p>

<blockquote><p>Well all the Apostles, they&rsquo;re sitting in swings</p>

<p>Saying, &ldquo;I&rsquo;d sell off my Savior for a set of new rings</p>

<p>And some sandals with the style of straps that cling best to the era&#8221;</p></blockquote>

<p>That&rsquo;s the first verse from Modest Mouse&rsquo;s Bankrupt on Selling. While the song&rsquo;s about the pitfalls of capitalism, the lyrics above although very explicit in what they&rsquo;re talking about are equally applicable to the theme of the song as they could be to greed and/or betrayal. The fluidity with which the song plays to your current mood in the moment is what I appreciate more than the brilliance that you might uncover during a post-mortem dissection of the lyrics.</p>

<p>I hadn&rsquo;t hitherto realised this about my preferences towards lyrical content, but once I had, it came as no surprise that my admiration has always been particularly strong for artists such as Bruce Springsteen, Morrissey, Ben Gibbard, etc. who find beautifully vivid ways of presenting the simplest of concepts, thereby lending it <em>just enough</em> ambiguity to make it feel different to every ear on every play.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Extraction-based text-summarization: A naive approach]]></title>
    <link href="http://akaashanky.github.io/blog/2014/04/24/extraction-based-text-summarization-a-naive-approach/"/>
    
    <updated>2014-04-24T14:36:55+05:30</updated>
    <id>http://akaashanky.github.io/blog/2014/04/24/extraction-based-text-summarization-a-naive-approach</id>
    
    <content type="html"><![CDATA[<p>I had always found Natural Language Processing (NLP) quite interesting, and a few times had toyed with the idea of exploring it a little more seriously. The buzz around recent YC alum, <a href="http://wit.ai">Wit.AI</a>, finally spurred me into action and I decided to give it a shot.</p>

<p>As with anything, the toughest part was getting started. NLP, despite being a discipline in its nascency, is actually quite expansive in its scope. I decided to go for low hanging fruit and start with text-summarization.</p>

<p>I came across <a href="http://thetokenizer.com/2013/04/28/build-your-own-summary-tool/">this</a> algorithm. It seems to take a naive extraction-based approach to text-summarisation but came across as something that should work pretty well. Upon using an implementation of it on random articles on the internet, I was somewhat disappointed with the results. That&rsquo;s when I came across <a href="https://github.com/philplckthun/node-sumuparticles">this</a> implementation of essentially the same algorithm, with a slight tweak that improves results significantly.</p>

<p>To explain it briefly, the algorithm converts the text into a fully-connected, weighted graph, wherein every sentence is a node in the graph and its edges connect it to every other sentence/node in the graph. The weight associated with every edge is an &ldquo;intersection score&rdquo; which quantifies how much the two sentences connected by the edge have in common. Finally, the sum of all the edges/interesection-scores of a sentence/node are summed up. The sentences with high scores are assumed to be &ldquo;key sentences&rdquo; because they have more in common with the other sentences and are thus included in the summary.</p>

<p>I&rsquo;ve created a small app that uses the modified implementation <a href="http://tldr-app.herokuapp.com/">here</a>. And the code for it can be found <a href="https://github.com/akaashanky/tldr">here</a>.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Running a Python script from Node.js]]></title>
    <link href="http://akaashanky.github.io/blog/2014/04/10/running-a-python-script-from-node-dot-js/"/>
    
    <updated>2014-04-10T03:10:39+05:30</updated>
    <id>http://akaashanky.github.io/blog/2014/04/10/running-a-python-script-from-node-dot-js</id>
    
    <content type="html"><![CDATA[<p>While working on something today, I needed to decrypt an RC4 encrypted string on Node. I was receiving the encrypted string from another server, so the encryption wasn&rsquo;t really under my control. Given that there are a bunch of pre-written NPM modules out there that do RC4 encryption/decryption this wasn&rsquo;t supposed to be a particularly difficult task. However, this seemingly trivial job turned out to be quite the timesuck.</p>

<p>None of the crypto modules I tried were able to correctly decrypt the encrypted string, which I&rsquo;m guessing meant that the other server was probably doing something funny during the encryption process. The organisation whose server I was communicating with had provided a Python code snippet that had an implementation of the RC4 decryption algorithm, and this particular implementation was working for the encrypted strings being returned.</p>

<p>As a quick-fix, I decided to just call this Python script from my Node server, pass it the encrypted string and receive the decrypted string as output. To do this in Node, you need to spawn a child Python process.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">terminal</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;child_process&#39;</span><span class="p">).</span><span class="nx">spawn</span><span class="p">(</span><span class="s1">&#39;python&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;rc4.py&#39;</span><span class="p">,</span> <span class="nx">secretKey</span><span class="p">,</span> <span class="nx">encryptedString</span><span class="p">]);;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">terminal</span><span class="p">.</span><span class="nx">stdout</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;stdout: &#39;</span> <span class="o">+</span> <span class="nx">data</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">terminal</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;exit&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">code</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;child process exited with code &#39;</span> <span class="o">+</span> <span class="nx">code</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">terminal</span><span class="p">.</span><span class="nx">stderr</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;stderr: &#39;</span> <span class="o">+</span> <span class="nx">data</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>The arguments to the spawn function are the child process command name (in this case &lsquo;python&rsquo; since I was trying to run a python program), followed by the array of arguments needed by the child process (in this case the name of the Python script, the encryption key and the encrypted string, respectively).</p>

<p>This worked quite well, but seemed somewhat hack-y in nature. So I might have to revisit this later and see how to do it directly within the Node process itself.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Self-centeredness]]></title>
    <link href="http://akaashanky.github.io/blog/2014/03/20/self-centeredness/"/>
    
    <updated>2014-03-20T15:03:18+05:30</updated>
    <id>http://akaashanky.github.io/blog/2014/03/20/self-centeredness</id>
    
    <content type="html"><![CDATA[<blockquote><p>Here is just one example of the total wrongness of something I tend to be automatically sure of: everything in my own immediate experience supports my deep belief that I am the absolute center of the universe; the realest, most vivid and important person in existence. We rarely think about this sort of natural, basic self-centeredness because it&rsquo;s so socially repulsive. But it&rsquo;s pretty much the same for all of us. It is our default setting, hard-wired into our boards at birth. Think about it: there is no experience you have had that you are not the absolute center of. The world as you experience it is there in front of YOU or behind YOU, to the left or right of YOU, on YOUR TV or YOUR monitor. And so on. Other people&rsquo;s thoughts and feelings have to be communicated to you somehow, but your own are so immediate, urgent, real.</p></blockquote>

<p>-David Foster Wallace</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[init]]></title>
    <link href="http://akaashanky.github.io/blog/2014/03/18/init/"/>
    
    <updated>2014-03-18T21:35:39+05:30</updated>
    <id>http://akaashanky.github.io/blog/2014/03/18/init</id>
    
    <content type="html"><![CDATA[<p>Captain&rsquo;s log, Stardate -308789.30679223756.</p>

<p>Been a while since my last foray into <a href="http://soliloquysamurai.blogspot.com">blogging</a>, so I&rsquo;ve had a while to un-learn all the reasons I shouldn&rsquo;t be doing this. Here goes!</p>
]]></content>
    
  </entry>
  
</feed>